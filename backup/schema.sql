
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE OR REPLACE FUNCTION "public"."create_default_faaapu"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$
begin
  insert into public.zone (profile_id, name)
  values (new.id, 'Mon Fa''a''apu');
  return new;
end;
$$;

ALTER FUNCTION "public"."create_default_faaapu"() OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    AS $$
begin
  insert into public.profiles (id, full_name, avatar_url)
  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;
$$;

ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."difficulty" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."difficulty" OWNER TO "postgres";

ALTER TABLE "public"."difficulty" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."difficulty_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."family" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."family" OWNER TO "postgres";

ALTER TABLE "public"."family" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."family_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."foliage" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."foliage" OWNER TO "postgres";

ALTER TABLE "public"."foliage" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."foliage_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."growth" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."growth" OWNER TO "postgres";

ALTER TABLE "public"."growth" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."growth_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."lifespan" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."lifespan" OWNER TO "postgres";

ALTER TABLE "public"."lifespan" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."lifespan_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."light" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."light" OWNER TO "postgres";

ALTER TABLE "public"."light" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."light_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."plant" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "family_id" bigint NOT NULL,
    "image_url" character varying NOT NULL,
    "water_id" bigint NOT NULL,
    "low_height" real,
    "high_height" real,
    "low_width" real,
    "high_width" real,
    "foliage_id" bigint NOT NULL,
    "growth_id" bigint NOT NULL,
    "shape_id" bigint NOT NULL,
    "scientific_name" character varying NOT NULL,
    "lifespan_id" bigint NOT NULL,
    "difficulty_id" bigint NOT NULL,
    "type_id" bigint NOT NULL,
    "content_url" character varying,
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."plant" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_bloom_season" (
    "plant_id" bigint NOT NULL,
    "season_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_bloom_season" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_harvest_season" (
    "plant_id" bigint NOT NULL,
    "season_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_harvest_season" OWNER TO "postgres";

ALTER TABLE "public"."plant" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."plant_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."plant_light" (
    "plant_id" bigint NOT NULL,
    "light_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_light" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_planting_method" (
    "plant_id" bigint NOT NULL,
    "planting_method_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_planting_method" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_planting_season" (
    "plant_id" bigint NOT NULL,
    "season_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_planting_season" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_prune_season" (
    "plant_id" bigint NOT NULL,
    "season_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_prune_season" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_soil_humidity" (
    "plant_id" bigint NOT NULL,
    "soil_humidity_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_soil_humidity" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_soil_ph" (
    "plant_id" bigint NOT NULL,
    "soil_ph_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_soil_ph" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_soil_type" (
    "plant_id" bigint NOT NULL,
    "soil_type_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_soil_type" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."plant_usage" (
    "plant_id" bigint NOT NULL,
    "usage_id" bigint NOT NULL
);

ALTER TABLE "public"."plant_usage" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."planting_method" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."planting_method" OWNER TO "postgres";

ALTER TABLE "public"."planting_method" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."planting_method_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "id" "uuid" NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "username" "text",
    "full_name" "text",
    "avatar_url" "text",
    "website" "text",
    "created_at" timestamp with time zone DEFAULT "now"(),
    CONSTRAINT "username_length" CHECK (("char_length"("username") >= 3))
);

ALTER TABLE "public"."profiles" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."shape" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."shape" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."soil_humidity" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."soil_humidity" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."soil_ph" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."soil_ph" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."soil_type" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."soil_type" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."type" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."type" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."usage" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."usage" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."water" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" "text",
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."water" OWNER TO "postgres";

CREATE OR REPLACE VIEW "public"."properties" AS
 SELECT "difficulty"."id",
    "difficulty"."name",
    "difficulty"."description",
    'difficulty'::"text" AS "tablename"
   FROM "public"."difficulty"
UNION ALL
 SELECT "foliage"."id",
    "foliage"."name",
    "foliage"."description",
    'foliage'::"text" AS "tablename"
   FROM "public"."foliage"
UNION ALL
 SELECT "growth"."id",
    "growth"."name",
    "growth"."description",
    'growth'::"text" AS "tablename"
   FROM "public"."growth"
UNION ALL
 SELECT "lifespan"."id",
    "lifespan"."name",
    "lifespan"."description",
    'lifespan'::"text" AS "tablename"
   FROM "public"."lifespan"
UNION ALL
 SELECT "light"."id",
    "light"."name",
    "light"."description",
    'light'::"text" AS "tablename"
   FROM "public"."light"
UNION ALL
 SELECT "planting_method"."id",
    "planting_method"."name",
    "planting_method"."description",
    'planting_method'::"text" AS "tablename"
   FROM "public"."planting_method"
UNION ALL
 SELECT "shape"."id",
    "shape"."name",
    "shape"."description",
    'shape'::"text" AS "tablename"
   FROM "public"."shape"
UNION ALL
 SELECT "soil_humidity"."id",
    "soil_humidity"."name",
    "soil_humidity"."description",
    'soil_humidity'::"text" AS "tablename"
   FROM "public"."soil_humidity"
UNION ALL
 SELECT "soil_ph"."id",
    "soil_ph"."name",
    "soil_ph"."description",
    'soil_ph'::"text" AS "tablename"
   FROM "public"."soil_ph"
UNION ALL
 SELECT "soil_type"."id",
    "soil_type"."name",
    "soil_type"."description",
    'soil_type'::"text" AS "tablename"
   FROM "public"."soil_type"
UNION ALL
 SELECT "type"."id",
    "type"."name",
    "type"."description",
    'type'::"text" AS "tablename"
   FROM "public"."type"
UNION ALL
 SELECT "usage"."id",
    "usage"."name",
    "usage"."description",
    'usage'::"text" AS "tablename"
   FROM "public"."usage"
UNION ALL
 SELECT "water"."id",
    "water"."name",
    "water"."description",
    'water'::"text" AS "tablename"
   FROM "public"."water";

ALTER TABLE "public"."properties" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."season" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "start_month" integer NOT NULL,
    "end_month" integer NOT NULL,
    "created_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_by" "uuid" DEFAULT "auth"."uid"(),
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."season" OWNER TO "postgres";

ALTER TABLE "public"."season" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."season_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."shape" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."shape_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."soil_humidity" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."soil_humidity_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."soil_type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."soil_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."soil_ph" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."soil_ph_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."usage" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."utility_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."water" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."water_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."zone" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "profile_id" "uuid" NOT NULL,
    "name" character varying NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."zone" OWNER TO "postgres";

ALTER TABLE "public"."zone" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."zone_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."zone_plant" (
    "zone_id" bigint NOT NULL,
    "plant_id" bigint NOT NULL
);

ALTER TABLE "public"."zone_plant" OWNER TO "postgres";

ALTER TABLE ONLY "public"."difficulty"
    ADD CONSTRAINT "difficulty_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."family"
    ADD CONSTRAINT "family_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."foliage"
    ADD CONSTRAINT "foliage_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."growth"
    ADD CONSTRAINT "growth_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."lifespan"
    ADD CONSTRAINT "lifespan_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."light"
    ADD CONSTRAINT "light_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."plant_bloom_season"
    ADD CONSTRAINT "plant_bloom_season_pkey" PRIMARY KEY ("plant_id", "season_id");

ALTER TABLE ONLY "public"."plant_harvest_season"
    ADD CONSTRAINT "plant_harvest_season_pkey" PRIMARY KEY ("plant_id", "season_id");

ALTER TABLE ONLY "public"."plant_light"
    ADD CONSTRAINT "plant_light_pkey" PRIMARY KEY ("plant_id", "light_id");

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."plant_planting_method"
    ADD CONSTRAINT "plant_planting_method_pkey" PRIMARY KEY ("plant_id", "planting_method_id");

ALTER TABLE ONLY "public"."plant_planting_season"
    ADD CONSTRAINT "plant_planting_season_pkey" PRIMARY KEY ("plant_id", "season_id");

ALTER TABLE ONLY "public"."plant_prune_season"
    ADD CONSTRAINT "plant_prune_season_pkey" PRIMARY KEY ("plant_id", "season_id");

ALTER TABLE ONLY "public"."plant_soil_humidity"
    ADD CONSTRAINT "plant_soil_humidity_pkey" PRIMARY KEY ("plant_id", "soil_humidity_id");

ALTER TABLE ONLY "public"."plant_soil_ph"
    ADD CONSTRAINT "plant_soil_ph_pkey" PRIMARY KEY ("plant_id", "soil_ph_id");

ALTER TABLE ONLY "public"."plant_soil_type"
    ADD CONSTRAINT "plant_soil_type_pkey" PRIMARY KEY ("plant_id", "soil_type_id");

ALTER TABLE ONLY "public"."plant_usage"
    ADD CONSTRAINT "plant_usage_pkey" PRIMARY KEY ("plant_id", "usage_id");

ALTER TABLE ONLY "public"."planting_method"
    ADD CONSTRAINT "planting_method_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_username_key" UNIQUE ("username");

ALTER TABLE ONLY "public"."season"
    ADD CONSTRAINT "season_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."shape"
    ADD CONSTRAINT "shape_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."soil_humidity"
    ADD CONSTRAINT "soil_humidity_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."soil_ph"
    ADD CONSTRAINT "soil_ph_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."soil_type"
    ADD CONSTRAINT "soil_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."type"
    ADD CONSTRAINT "type_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."usage"
    ADD CONSTRAINT "utility_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."water"
    ADD CONSTRAINT "water_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."zone"
    ADD CONSTRAINT "zone_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."zone_plant"
    ADD CONSTRAINT "zone_plant_pkey" PRIMARY KEY ("zone_id", "plant_id");

CREATE OR REPLACE TRIGGER "trigger_create_default_faaapu" AFTER INSERT ON "public"."profiles" FOR EACH ROW EXECUTE FUNCTION "public"."create_default_faaapu"();

ALTER TABLE ONLY "public"."difficulty"
    ADD CONSTRAINT "difficulty_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."difficulty"
    ADD CONSTRAINT "difficulty_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."family"
    ADD CONSTRAINT "family_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."family"
    ADD CONSTRAINT "family_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."foliage"
    ADD CONSTRAINT "foliage_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."foliage"
    ADD CONSTRAINT "foliage_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."growth"
    ADD CONSTRAINT "growth_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."growth"
    ADD CONSTRAINT "growth_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."lifespan"
    ADD CONSTRAINT "lifespan_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."lifespan"
    ADD CONSTRAINT "lifespan_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."light"
    ADD CONSTRAINT "light_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."light"
    ADD CONSTRAINT "light_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."plant_bloom_season"
    ADD CONSTRAINT "plant_bloom_season_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_bloom_season"
    ADD CONSTRAINT "plant_bloom_season_season_id_fkey" FOREIGN KEY ("season_id") REFERENCES "public"."season"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_difficulty_id_fkey" FOREIGN KEY ("difficulty_id") REFERENCES "public"."difficulty"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_family_id_fkey" FOREIGN KEY ("family_id") REFERENCES "public"."family"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_foliage_id_fkey" FOREIGN KEY ("foliage_id") REFERENCES "public"."foliage"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_growth_id_fkey" FOREIGN KEY ("growth_id") REFERENCES "public"."growth"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."plant_harvest_season"
    ADD CONSTRAINT "plant_harvest_season_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_harvest_season"
    ADD CONSTRAINT "plant_harvest_season_season_id_fkey" FOREIGN KEY ("season_id") REFERENCES "public"."season"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_lifespan_id_fkey" FOREIGN KEY ("lifespan_id") REFERENCES "public"."lifespan"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."plant_light"
    ADD CONSTRAINT "plant_light_light_id_fkey" FOREIGN KEY ("light_id") REFERENCES "public"."light"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_light"
    ADD CONSTRAINT "plant_light_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_planting_method"
    ADD CONSTRAINT "plant_planting_method_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_planting_method"
    ADD CONSTRAINT "plant_planting_method_planting_method_id_fkey" FOREIGN KEY ("planting_method_id") REFERENCES "public"."planting_method"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_planting_season"
    ADD CONSTRAINT "plant_planting_season_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_planting_season"
    ADD CONSTRAINT "plant_planting_season_season_id_fkey" FOREIGN KEY ("season_id") REFERENCES "public"."season"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_prune_season"
    ADD CONSTRAINT "plant_prune_season_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_prune_season"
    ADD CONSTRAINT "plant_prune_season_season_id_fkey" FOREIGN KEY ("season_id") REFERENCES "public"."season"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_shape_id_fkey" FOREIGN KEY ("shape_id") REFERENCES "public"."shape"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."plant_soil_humidity"
    ADD CONSTRAINT "plant_soil_humidity_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_soil_humidity"
    ADD CONSTRAINT "plant_soil_humidity_soil_humidity_id_fkey" FOREIGN KEY ("soil_humidity_id") REFERENCES "public"."soil_humidity"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_soil_ph"
    ADD CONSTRAINT "plant_soil_ph_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_soil_ph"
    ADD CONSTRAINT "plant_soil_ph_soil_ph_id_fkey" FOREIGN KEY ("soil_ph_id") REFERENCES "public"."soil_ph"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_soil_type"
    ADD CONSTRAINT "plant_soil_type_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_soil_type"
    ADD CONSTRAINT "plant_soil_type_soil_type_id_fkey" FOREIGN KEY ("soil_type_id") REFERENCES "public"."soil_type"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_type_id_fkey" FOREIGN KEY ("type_id") REFERENCES "public"."type"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."plant_usage"
    ADD CONSTRAINT "plant_usage_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant_usage"
    ADD CONSTRAINT "plant_usage_usage_id_fkey" FOREIGN KEY ("usage_id") REFERENCES "public"."usage"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."plant"
    ADD CONSTRAINT "plant_water_id_fkey" FOREIGN KEY ("water_id") REFERENCES "public"."water"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."planting_method"
    ADD CONSTRAINT "planting_method_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."planting_method"
    ADD CONSTRAINT "planting_method_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."season"
    ADD CONSTRAINT "season_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."season"
    ADD CONSTRAINT "season_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."shape"
    ADD CONSTRAINT "shape_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."shape"
    ADD CONSTRAINT "shape_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."soil_humidity"
    ADD CONSTRAINT "soil_humidity_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."soil_humidity"
    ADD CONSTRAINT "soil_humidity_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."soil_ph"
    ADD CONSTRAINT "soil_ph_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."soil_ph"
    ADD CONSTRAINT "soil_ph_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."soil_type"
    ADD CONSTRAINT "soil_type_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."soil_type"
    ADD CONSTRAINT "soil_type_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."type"
    ADD CONSTRAINT "type_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."type"
    ADD CONSTRAINT "type_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."usage"
    ADD CONSTRAINT "usage_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."usage"
    ADD CONSTRAINT "usage_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."water"
    ADD CONSTRAINT "water_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."water"
    ADD CONSTRAINT "water_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."profiles"("id") ON UPDATE RESTRICT ON DELETE SET NULL;

ALTER TABLE ONLY "public"."zone_plant"
    ADD CONSTRAINT "zone_plant_plant_id_fkey" FOREIGN KEY ("plant_id") REFERENCES "public"."plant"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."zone_plant"
    ADD CONSTRAINT "zone_plant_zone_id_fkey" FOREIGN KEY ("zone_id") REFERENCES "public"."zone"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."zone"
    ADD CONSTRAINT "zone_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id") ON UPDATE CASCADE ON DELETE CASCADE;

CREATE POLICY "Enable delete for users based on profile_id" ON "public"."zone" FOR DELETE USING (("auth"."uid"() = "profile_id"));

CREATE POLICY "Enable delete for users based on user_id" ON "public"."zone_plant" FOR DELETE USING (("auth"."uid"() IN ( SELECT "zone"."profile_id"
   FROM "public"."zone"
  WHERE ("zone"."id" = "zone"."id"))));

CREATE POLICY "Enable insert for authenticated users only" ON "public"."family" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."season" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."shape" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."type" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."usage" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."difficulty" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."family" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."foliage" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."growth" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."lifespan" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."light" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_bloom_season" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_harvest_season" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_light" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_planting_method" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_planting_season" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_prune_season" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_soil_humidity" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_soil_ph" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_soil_type" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."plant_usage" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."planting_method" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."season" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."shape" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."soil_humidity" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."soil_ph" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."soil_type" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."type" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."usage" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."water" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."zone" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."zone_plant" FOR SELECT USING (true);

CREATE POLICY "Enable update for users based on profile_id" ON "public"."zone" FOR UPDATE USING (("auth"."uid"() = "profile_id")) WITH CHECK (("auth"."uid"() = "profile_id"));

CREATE POLICY "Enable users to insert plants in their zone" ON "public"."zone_plant" FOR INSERT TO "authenticated" WITH CHECK (("auth"."uid"() IN ( SELECT "zone"."profile_id"
   FROM "public"."zone"
  WHERE ("zone"."id" = "zone"."id"))));

CREATE POLICY "Enable users to insert their zones" ON "public"."zone" FOR INSERT WITH CHECK (("auth"."uid"() = "profile_id"));

CREATE POLICY "Public profiles are viewable by everyone." ON "public"."profiles" FOR SELECT USING (true);

CREATE POLICY "Users can insert their own profile." ON "public"."profiles" FOR INSERT WITH CHECK (("auth"."uid"() = "id"));

CREATE POLICY "Users can update own profile." ON "public"."profiles" FOR UPDATE USING (("auth"."uid"() = "id"));

ALTER TABLE "public"."difficulty" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."family" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."foliage" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."growth" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."lifespan" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."light" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_bloom_season" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_harvest_season" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_light" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_planting_method" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_planting_season" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_prune_season" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_soil_humidity" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_soil_ph" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_soil_type" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."plant_usage" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."planting_method" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."profiles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."season" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."shape" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."soil_humidity" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."soil_ph" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."soil_type" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."type" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."usage" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."water" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."zone" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."zone_plant" ENABLE ROW LEVEL SECURITY;

REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."create_default_faaapu"() TO "anon";
GRANT ALL ON FUNCTION "public"."create_default_faaapu"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."create_default_faaapu"() TO "service_role";

GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";

GRANT ALL ON TABLE "public"."difficulty" TO "anon";
GRANT ALL ON TABLE "public"."difficulty" TO "authenticated";
GRANT ALL ON TABLE "public"."difficulty" TO "service_role";

GRANT ALL ON SEQUENCE "public"."difficulty_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."difficulty_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."difficulty_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."family" TO "anon";
GRANT ALL ON TABLE "public"."family" TO "authenticated";
GRANT ALL ON TABLE "public"."family" TO "service_role";

GRANT ALL ON SEQUENCE "public"."family_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."family_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."family_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."foliage" TO "anon";
GRANT ALL ON TABLE "public"."foliage" TO "authenticated";
GRANT ALL ON TABLE "public"."foliage" TO "service_role";

GRANT ALL ON SEQUENCE "public"."foliage_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."foliage_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."foliage_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."growth" TO "anon";
GRANT ALL ON TABLE "public"."growth" TO "authenticated";
GRANT ALL ON TABLE "public"."growth" TO "service_role";

GRANT ALL ON SEQUENCE "public"."growth_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."growth_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."growth_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."lifespan" TO "anon";
GRANT ALL ON TABLE "public"."lifespan" TO "authenticated";
GRANT ALL ON TABLE "public"."lifespan" TO "service_role";

GRANT ALL ON SEQUENCE "public"."lifespan_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."lifespan_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."lifespan_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."light" TO "anon";
GRANT ALL ON TABLE "public"."light" TO "authenticated";
GRANT ALL ON TABLE "public"."light" TO "service_role";

GRANT ALL ON SEQUENCE "public"."light_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."light_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."light_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."plant" TO "anon";
GRANT ALL ON TABLE "public"."plant" TO "authenticated";
GRANT ALL ON TABLE "public"."plant" TO "service_role";

GRANT ALL ON TABLE "public"."plant_bloom_season" TO "anon";
GRANT ALL ON TABLE "public"."plant_bloom_season" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_bloom_season" TO "service_role";

GRANT ALL ON TABLE "public"."plant_harvest_season" TO "anon";
GRANT ALL ON TABLE "public"."plant_harvest_season" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_harvest_season" TO "service_role";

GRANT ALL ON SEQUENCE "public"."plant_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."plant_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."plant_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."plant_light" TO "anon";
GRANT ALL ON TABLE "public"."plant_light" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_light" TO "service_role";

GRANT ALL ON TABLE "public"."plant_planting_method" TO "anon";
GRANT ALL ON TABLE "public"."plant_planting_method" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_planting_method" TO "service_role";

GRANT ALL ON TABLE "public"."plant_planting_season" TO "anon";
GRANT ALL ON TABLE "public"."plant_planting_season" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_planting_season" TO "service_role";

GRANT ALL ON TABLE "public"."plant_prune_season" TO "anon";
GRANT ALL ON TABLE "public"."plant_prune_season" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_prune_season" TO "service_role";

GRANT ALL ON TABLE "public"."plant_soil_humidity" TO "anon";
GRANT ALL ON TABLE "public"."plant_soil_humidity" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_soil_humidity" TO "service_role";

GRANT ALL ON TABLE "public"."plant_soil_ph" TO "anon";
GRANT ALL ON TABLE "public"."plant_soil_ph" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_soil_ph" TO "service_role";

GRANT ALL ON TABLE "public"."plant_soil_type" TO "anon";
GRANT ALL ON TABLE "public"."plant_soil_type" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_soil_type" TO "service_role";

GRANT ALL ON TABLE "public"."plant_usage" TO "anon";
GRANT ALL ON TABLE "public"."plant_usage" TO "authenticated";
GRANT ALL ON TABLE "public"."plant_usage" TO "service_role";

GRANT ALL ON TABLE "public"."planting_method" TO "anon";
GRANT ALL ON TABLE "public"."planting_method" TO "authenticated";
GRANT ALL ON TABLE "public"."planting_method" TO "service_role";

GRANT ALL ON SEQUENCE "public"."planting_method_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."planting_method_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."planting_method_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."profiles" TO "anon";
GRANT ALL ON TABLE "public"."profiles" TO "authenticated";
GRANT ALL ON TABLE "public"."profiles" TO "service_role";

GRANT ALL ON TABLE "public"."shape" TO "anon";
GRANT ALL ON TABLE "public"."shape" TO "authenticated";
GRANT ALL ON TABLE "public"."shape" TO "service_role";

GRANT ALL ON TABLE "public"."soil_humidity" TO "anon";
GRANT ALL ON TABLE "public"."soil_humidity" TO "authenticated";
GRANT ALL ON TABLE "public"."soil_humidity" TO "service_role";

GRANT ALL ON TABLE "public"."soil_ph" TO "anon";
GRANT ALL ON TABLE "public"."soil_ph" TO "authenticated";
GRANT ALL ON TABLE "public"."soil_ph" TO "service_role";

GRANT ALL ON TABLE "public"."soil_type" TO "anon";
GRANT ALL ON TABLE "public"."soil_type" TO "authenticated";
GRANT ALL ON TABLE "public"."soil_type" TO "service_role";

GRANT ALL ON TABLE "public"."type" TO "anon";
GRANT ALL ON TABLE "public"."type" TO "authenticated";
GRANT ALL ON TABLE "public"."type" TO "service_role";

GRANT ALL ON TABLE "public"."usage" TO "anon";
GRANT ALL ON TABLE "public"."usage" TO "authenticated";
GRANT ALL ON TABLE "public"."usage" TO "service_role";

GRANT ALL ON TABLE "public"."water" TO "anon";
GRANT ALL ON TABLE "public"."water" TO "authenticated";
GRANT ALL ON TABLE "public"."water" TO "service_role";

GRANT ALL ON TABLE "public"."properties" TO "anon";
GRANT ALL ON TABLE "public"."properties" TO "authenticated";
GRANT ALL ON TABLE "public"."properties" TO "service_role";

GRANT ALL ON TABLE "public"."season" TO "anon";
GRANT ALL ON TABLE "public"."season" TO "authenticated";
GRANT ALL ON TABLE "public"."season" TO "service_role";

GRANT ALL ON SEQUENCE "public"."season_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."season_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."season_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."shape_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."shape_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."shape_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."soil_humidity_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."soil_humidity_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."soil_humidity_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."soil_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."soil_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."soil_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."soil_ph_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."soil_ph_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."soil_ph_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."type_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."utility_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."utility_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."utility_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."water_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."water_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."water_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."zone" TO "anon";
GRANT ALL ON TABLE "public"."zone" TO "authenticated";
GRANT ALL ON TABLE "public"."zone" TO "service_role";

GRANT ALL ON SEQUENCE "public"."zone_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."zone_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."zone_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."zone_plant" TO "anon";
GRANT ALL ON TABLE "public"."zone_plant" TO "authenticated";
GRANT ALL ON TABLE "public"."zone_plant" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
